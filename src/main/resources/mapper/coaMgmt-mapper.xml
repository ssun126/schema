<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="coaMgmt">

    <select id="getCOANumber" resultType="String">
        /* coaMgmtMapper.getCOANumber */
        SELECT 'COA-'|| TO_CHAR(SYSDATE, 'YYMMDD') || LPAD(SEQ_COA_ID_01.NEXTVAL, 8, '0')
        FROM DUAL
    </select>

    <select id="GetBaseCode"  parameterType="String" resultType="baseCode">
        SELECT * FROM  SC_base_code
        WHERE  GROUP_CODE != BASE_CODE
        AND BASE_STATUS ='Y'
        AND GROUP_CODE  =#{GROUP_CODE}
        ORDER BY BASE_SORT ASC
    </select>

    <select id="GetBaseCodePLANT"  parameterType="String" resultType="baseCode">
        SELECT * FROM  SC_base_code
        WHERE  GROUP_CODE != BASE_CODE
        AND BASE_STATUS ='Y'
        AND GROUP_CODE  =#{GROUP_CODE}
        AND BASE_OPTION2 IS NOT null
        ORDER BY BASE_SORT ASC
    </select>

    <select id="getUserList"  parameterType="map" resultType="hashMap">
        SELECT
        u.USER_IDX,
        u.USER_ID,
        u.USER_PWD,
        u.USER_NAME,
        u.USER_GUBN,
        u.USER_STATUS,
        u.REG_DW_USER_IDX,
        u.UP_DW_USER_IDX,
        u.DEL_DW_USER_IDX,
        TO_CHAR(u.REG_DATE, 'YYYY-MM-DD') REG_DATE ,
        u.UP_DATE,
        u.DEL_DATE
        FROM SC_USER_INFO u
        WHERE 1=1
        AND  u.USER_STATUS = 'Y'
        <if test="USER_ID != null and USER_ID != ''">
            AND u.USER_ID LIKE '%' || #{USER_ID} || '%'
        </if>
        <if test="USER_NAME != null and USER_NAME != ''">
            AND u.USER_NAME LIKE '%' || #{USER_NAME} || '%'
        </if>
    </select>

    <!--성적서 그리드-->
    <select id="getCOAList"  parameterType="coaMgmt" resultType="coaMgmt">
        SELECT
        CM.COA_ID
        , CM.VENDOR_ID
        , MT.VENDOR_NAME
        , CM.MATERIAL_ID
        , MT.MATERIAL_NAME
        , CM.FACTORY_ID
        , SML.LANGUAGE_CODE_DATA AS FACTORY_NAME
        , CM.LOT_NO
        , CM.STOCK_DATE
        , CM.MF_DATE
        , CM.COA_STATUS
        , CM.ETC
        , CM.IF_SEND_DATETIME
        , CM.RETURN_DESC
        , CM.IF_USER
        , TO_CHAR(CM.IF_DATETIME, 'YYYY-MM-DD') AS IF_DATETIME
        , CM.CREATOR
        , CM.CREATE_DATETIME
        , (SELECT MIN(CD.IS_SPECIN)
              FROM COA_DETAIL CD
            WHERE CD.COA_ID = CM.COA_ID
                AND CD.LOT_NO = CM.LOT_NO) AS SPEC_IN
        , (SELECT SM.LANGUAGE_CODE_DATA
              FROM CODE_DETAIL CD
            JOIN SYS_MULTI_LANGUAGE SM
             ON CD.MULTI_LANG_ID = SM.LANGUAGE_CODE_ID
                AND SM.LANGUAGE = #{TOKEN_USER_LANG}
        WHERE MASTER_ID = 'COA_STATUS'
        AND CD.CODE_VALUE = CM.COA_STATUS) AS COA_STATUS_STR
        , SU.USER_NAME AS CREATOR_NAME
        , CM.VENDOR_COMMENT
        , MT.WETPR
        , CM.E_DATE
        , CM.QUANTITY
        FROM COA_MASTER CM
        JOIN MATERIAL MT
          ON CM.VENDOR_ID = MT.VENDOR_ID
            AND CM.MATERIAL_ID = MT.MATERIAL_ID
            AND CM.FACTORY_ID = MT.FACTORY_ID
        JOIN SYS_USER SU
         ON SU.USER_ID = CM.CREATOR
        JOIN(SELECT PLANT.ID,
                SYS_MULTI_LANGUAGE.LANGUAGE_CODE_DATA
            FROM PLANT, SYS_MULTI_LANGUAGE
            WHERE
                 PLANT.MULTI_LANG_ID = SYS_MULTI_LANGUAGE.LANGUAGE_CODE_ID
                  AND SYS_MULTI_LANGUAGE.LANGUAGE = #{TOKEN_USER_LANG}) SML
        ON CM.FACTORY_ID = SML.ID
        WHERE
        <if test="TOKEN_USER_TYPE == null or TOKEN_USER_TYPE == ''">
            1 = 0
        </if>

        <if test="TOKEN_USER_TYPE != null">
            <if test="TOKEN_USER_TYPE != 'AU' and TOKEN_USER_TYPE != 'MU' and TOKEN_USER_TYPE != 'VU'">
                1 = 0
            </if>
            <if test="TOKEN_USER_TYPE == 'AU' or TOKEN_USER_TYPE == 'MU' or TOKEN_USER_TYPE == 'VU'">
                1 = 1
            </if>
        </if>

        <if test="fromDate != null and fromDate != ''">
            AND CM.CREATE_DATETIME <![CDATA[ >= ]]> #{fromDate} || ' 00:00:00.000'
        </if>

        <if test="toDate != null and toDate != ''">
            AND CM.CREATE_DATETIME <![CDATA[ <= ]]> #{toDate} || ' 23:59:59.999'
        </if>

        <if test="registerName != null and registerName != ''">
            AND UPPER(SU.USER_NAME) LIKE '%' || UPPER(#{registerName}) || '%'
        </if>

<!--        <if test="vendorNameList != null">-->
<!--            AND MT.VENDOR_NAME IN-->
<!--            <foreach collection="vendorNameList" item="item" index="index" separator="," open="(" close=")">-->
<!--                #{item}-->
<!--            </foreach>-->
<!--        </if>-->

        <if test="vendorNameList == null">
            <if test="vendorName != null and vendorName != ''">
                AND UPPER(MT.VENDOR_NAME) LIKE '%' || UPPER(#{vendorName}) || '%'
            </if>
        </if>

        <if test="coaNumber != null and coaNumber != ''">
            AND CM.COA_ID LIKE '%' || #{coaNumber} || '%'
        </if>

        <if test="materialName != null and materialName != ''">
            AND UPPER(MT.MATERIAL_NAME) LIKE '%' || UPPER(#{materialName}) || '%'
        </if>

        <!-- 성적서 상태-->
        <if test="coaStatus != null and coaStatus != ''">
            AND CM.COA_STATUS = #{coaStatus}
        </if>

        <if test="lotNo != null and lotNo != ''">
            AND CM.LOT_NO LIKE '%' || #{lotNo} || '%'
        </if>

        <!-- 플랜트-->
        <if test="factoryId != null and factoryId != ''">
            AND CM.FACTORY_ID = #{factoryId}
        </if>

        <if test="dlvFromDate != null and dlvFromDate != ''">
            AND CM.STOCK_DATE <![CDATA[ >= ]]> #{dlvFromDate}
        </if>

        <if test="dlvToDate != null and dlvToDate != ''">
            AND CM.STOCK_DATE <![CDATA[ <= ]]> #{dlvToDate}
        </if>

        <if test="TOKEN_USER_TYPE != null and TOKEN_USER_TYPE == 'MU'">
            AND MT.FACTORY_ID IN (SELECT PLANT_ID FROM USER_PLANT WHERE USER_ID = #{TOKEN_USER_ID})
        </if>

        <if test="TOKEN_USER_TYPE != null and TOKEN_USER_TYPE == 'VU'">
            AND MT.VENDOR_ID IN (SELECT VENDOR_ID FROM USER_VENDOR WHERE USER_ID = #{TOKEN_USER_ID})
        </if>

        ORDER BY COA_ID DESC
    </select>

    <!--  팝업 성적서 상단 -->
    <select id="getCOADetailTitle" parameterType="coaMgmt" resultType="coaMgmt">
        /* coaMgmtMapper.getCOADetailTitle */
        SELECT
            CM.COA_ID
            , CM.VENDOR_ID
            , MT.VENDOR_NAME
            , CM.MATERIAL_ID
            , MT.MATERIAL_NAME
            , CM.FACTORY_ID
            , MT.FACTORY_NAME
            , CM.LOT_NO
            , CM.STOCK_DATE
            , CM.MF_DATE
            , CM.COA_STATUS
            , CM.ETC
            , CM.IF_SEND_DATETIME
            , CM.RETURN_DESC
            , CM.CREATOR
            , CM.CREATE_DATETIME
            , CM.VENDOR_COMMENT
            , CM.E_DATE
            , CM.QUANTITY
        FROM COA_MASTER CM
            JOIN MATERIAL MT
                ON CM.VENDOR_ID = MT.VENDOR_ID
            AND CM.MATERIAL_ID = MT.MATERIAL_ID
            AND CM.FACTORY_ID = MT.FACTORY_ID
        WHERE CM.COA_ID = #{COA_ID}
            AND CM.VENDOR_ID = #{VENDOR_ID}
            AND CM.MATERIAL_ID = #{MATERIAL_ID}
            AND CM.FACTORY_ID = #{FACTORY_ID}
            AND CM.LOT_NO = #{LOT_NO}
    </select>

    <!--성적서 팝업 그리드(스팩)-->
    <select id="getCOADetailSpec" parameterType="coaMgmt" resultType="coaMgmt">
        /* coaMgmtMapper.getCOADetailSpec */
        SELECT
        CD.COA_ID
        , CD.LOT_NO
        , CD.SPEC_ID
        , SP.SPEC_NAME
        , SP.SPEC_ENG_NAME
        , CD.SPEC_LSL
        , CD.SPEC_USL
        , NVL(CD.RESULT_VALUE, ' ') AS RESULT_VALUE
        , CD.IS_SPECIN
        , CD.IF_SEND_DATETIME
        <![CDATA[
		     , NVL2(CD.SPEC_LSL
		            , NVL2(CD.SPEC_USL
		                   , DECODE(SUBSTR(CD.SPEC_LSL, 1, 1), '.', '0'||CD.SPEC_LSL, CD.SPEC_LSL) || ' ~ ' || DECODE(SUBSTR(CD.SPEC_USL, 1, 1), '.', '0'||CD.SPEC_USL, CD.SPEC_USL)
		                   , '>= ' || DECODE(SUBSTR(CD.SPEC_LSL, 1, 1), '.', '0'||CD.SPEC_LSL, CD.SPEC_LSL))
		            , NVL2(CD.SPEC_USL
		                   , '<= ' || DECODE(SUBSTR(CD.SPEC_USL, 1, 1), '.', '0'||CD.SPEC_USL, CD.SPEC_USL)
		                   , 'No Spec')) AS SPEC_AREA
		     ]]>
        <![CDATA[
		     , NVL2(CD.SPEC_LCL
		            , NVL2(CD.SPEC_UCL
		                   , DECODE(SUBSTR(CD.SPEC_LCL, 1, 1), '.', '0'||CD.SPEC_LCL, CD.SPEC_LCL) || ' ~ ' || DECODE(SUBSTR(CD.SPEC_UCL, 1, 1), '.', '0'||CD.SPEC_UCL, CD.SPEC_UCL)
		                   , '>= ' || DECODE(SUBSTR(CD.SPEC_LCL, 1, 1), '.', '0'||CD.SPEC_LCL, CD.SPEC_LCL))
		            , NVL2(CD.SPEC_UCL
		                   , '<= ' || DECODE(SUBSTR(CD.SPEC_UCL, 1, 1), '.', '0'||CD.SPEC_UCL, CD.SPEC_UCL)
		                   , 'No Spec')) AS SPEC_AREA2
		     ]]>
        <![CDATA[
             , CASE WHEN CD.SPEC_LSL IS NULL AND CD.SPEC_USL IS NULL THEN 'N'
                    WHEN CD.SPEC_LSL IS NULL AND TO_NUMBER(CD.SPEC_USL) >= TO_NUMBER(CD.RESULT_VALUE) THEN 'N'
                    WHEN CD.SPEC_USL IS NULL AND TO_NUMBER(CD.SPEC_LSL) <= TO_NUMBER(CD.RESULT_VALUE) THEN 'N'
                    WHEN TO_NUMBER(CD.SPEC_USL) >= TO_NUMBER(CD.RESULT_VALUE) AND TO_NUMBER(CD.SPEC_LSL) <= TO_NUMBER(CD.RESULT_VALUE) THEN 'N'
                    ELSE 'Y'
               END AS IS_SPEC_YN
             ]]>
        <![CDATA[
             , CASE WHEN CD.SPEC_LCL IS NULL AND CD.SPEC_UCL IS NULL THEN 'N'
                    WHEN CD.SPEC_LCL IS NULL AND TO_NUMBER(CD.SPEC_UCL) >= TO_NUMBER(CD.RESULT_VALUE) THEN 'N'
                    WHEN CD.SPEC_UCL IS NULL AND TO_NUMBER(CD.SPEC_LCL) <= TO_NUMBER(CD.RESULT_VALUE) THEN 'N'
                    WHEN TO_NUMBER(CD.SPEC_UCL) >= TO_NUMBER(CD.RESULT_VALUE) AND TO_NUMBER(CD.SPEC_LCL) <= TO_NUMBER(CD.RESULT_VALUE) THEN 'N'
                    ELSE 'Y'
               END AS IS_CONTROL_YN
            ]]>
        FROM COA_DETAIL CD
        JOIN SPEC SP
        ON SP.SPEC_ID = CD.SPEC_ID
        WHERE CD.COA_ID = #{COA_ID}
        AND CD.LOT_NO = #{LOT_NO}
        AND SP.VENDOR_ID = #{VENDOR_ID}
        AND SP.MATERIAL_ID = #{MATERIAL_ID}
        AND SP.FACTORY_ID = #{FACTORY_ID}
        ORDER BY
        SP.ORDER_NO
    </select>

    <update id="updateVendorComment">
        /* coaMgmtMapper.updateVendorComment */
        UPDATE COA_MASTER
        SET VENDOR_COMMENT = #{VENDOR_COMMENT}
        , MODIFIER = #{TOKEN_USER_ID}
        , MODIFY_TIME = SYSDATE
        WHERE COA_ID = #{COA_ID}
        AND LOT_NO = #{LOT_NO}
    </update>


    <insert id="copyCOAMaster" parameterType="coaMgmt">
        INSERT INTO COA_MASTER (
            COA_ID,
            VENDOR_ID,
            MATERIAL_ID,
            FACTORY_ID,
            LOT_NO,
            STOCK_DATE,
            MF_DATE,
            COA_STATUS,
            E_DATE,
            QUANTITY,
            LANGUAGE_TYPE,
            CREATOR,
            CREATE_DATETIME
        )
        values (
            SELECT
                #{COPY_COA_ID},
                VENDOR_ID,
                MATERIAL_ID,
                FACTORY_ID,
                LOT_NO,
                #{STOCK_DATE},
                #{MF_DATE},
                'A',
                #{E_DATE},
                #{QUANTITY},
                LANGUAGE_TYPE,
                #{CREATOR},
                SYSDATE
                FROM COA_MASTER
            WHERE
                COA_ID = #{COA_ID}
                AND LOT_NO = #{LOT_NO}
                AND VENDOR_ID = #{VENDOR_ID}
                AND MATERIAL_ID = #{MATERIAL_ID}
                AND FACTORY_ID = #{FACTORY_ID}
        )
    </insert>

    <insert id="copyCOADetail" parameterType="coaMgmt">
        /* coaMgmtMapper.insertCOADetail */
        INSERT
        INTO COA_DETAIL (
            COA_ID
            , LOT_NO
            , SPEC_ID
            , SPEC_LSL
            , SPEC_USL
            , RESULT_VALUE
            , IS_SPECIN
            , SPEC_LCL
            , SPEC_UCL
        )
        values (
            SELECT
                #{COPY_COA_ID}
                , LOT_NO
                , SPEC_ID
                , SPEC_LSL
                , SPEC_USL
                , RESULT_VALUE
                , IS_SPECIN
                , SPEC_LCL
                , SPEC_UCL
            FROM COA_DETAIL
            WHERE
                COA_ID = #{COA_ID}
                AND LOT_NO = #{LOT_NO}
        )
    </insert>


</mapper>