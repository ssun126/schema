<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member">
    <insert id="save" parameterType="member">
        insert into USER_INFO(USER_EMAIL, PASSWORD, USER_NAME, USER_Mobile)
        values (#{USER_EMAIL}, #{PASSWORD}, #{USER_NAME}, #{USER_Mobile})
    </insert>

    <!-- USERINFO 저장!!-->
    <insert id="saveUserinfo" parameterType="userinfo">
        insert into USERINFO(USERIDX , USERID , USERPWD , USERNAME ,USERGUBN ,USERSTATUS ,REGDWUSERIDX  ,REGDATE,"UPDATE")
        values ( (SELECT NVL(MAX(USERIDX), 0) + 1 FROM USERINFO) , #{USERID} ,  #{USERPWD} ,  #{USERNAME} , #{USERGUBN} , #{USERSTATUS} , #{REGDWUSERIDX} , sysdate,sysdate )
    </insert>

    <!-- USERINFO 가입된정보 가져가기 -->
    <select id="findByUserId" parameterType="String" resultType="userinfo">
        select * from USERINFO where USERID=#{userid}
    </select>

    <!-- USERINFOCOMPANYUSER  공동 작업자 저장!!-->
    <insert id="saveUserinfoCompanyUser" parameterType="userinfocom">
        insert into USERINFOCOMPANYUSER(COMUSERIDX , USERIDX , COMCODE , USERNAME ,USERPOSITION ,USERDEPT , USEREMAIL,USERPHONE )
        values ( (SELECT NVL(MAX(COMUSERIDX), 0) + 1 FROM USERINFOCOMPANYUSER) , #{USERIDX} ,#{COMCODE} ,  #{USERNAME} , #{USERPOSITION} , #{USERDEPT}, #{USEREMAIL} , #{USERPHONE}  )
    </insert>

    <!-- USERINFOCOMPANYUSER 가입된정보 공동 작업자  COMUSERIDX -->
    <select id="findByCompanyUserName" parameterType="String" resultType="userinfocom">
        select * from USERINFOCOMPANYUSER where COMCODE=#{COMCODE} and USERNAME=#{USERNAME}
    </select>


    <!-- USERINFOCOMPANYUSER   사용자 추가정보 신청상태.. 승일인 사유 저장-->
    <insert id="saveUserinfoCompanyHis" parameterType="userinfoHis">
        insert into USERINFOCOMPANY(USERIDX
        , COMCODE , COMUSERIDX , IDPWADDREASON ,USERSTATUS ,USEROKDATE , RETRUNREASON )
        values ( (SELECT NVL(MAX(COMUSERIDX), 0) + 1 FROM USERINFOCOMPANY)
        , #{COMCODE} ,#{COMUSERIDX} ,  #{IDPWADDREASON} , #{USERSTATUS} , #{USEROKDATE}, #{RETRUNREASON}  )
    </insert>

    <!-- updateCompanyCode COMPANYCODE 회사코드 업데이트-->
    <update id="updateCompanyCode" parameterType="comPanyCode">
        update COMPANYCODE set
             VENDORWORKKIND=#{VENDORWORKKIND}
            ,COMUSERIDX=#{COMUSERIDX}
            ,COMPANYNAME=#{COMPANYNAME}
            ,FACTORYNAME=#{FACTORYNAME}
            ,BUSNUMBER=#{BUSNUMBER}
            ,COMADDRESS=#{COMADDRESS}
            ,COMCEONAME=#{COMCEONAME}
            ,COMCEOPHONE=#{COMCEOPHONE}
            ,COMCEOEMAIL=#{COMCEOEMAIL}
            ,COMFILENAME=#{COMFILENAME}
            ,COMFILEPATH=#{COMFILEPATH}
            ,"UPDATE" =sysdate
            ,UPDWUSERIDX =#{UPDWUSERIDX}
        where COMCODE=#{COMCODE}
    </update>




    <!-- 최초가입 여부 (마스터 코드 등록여부)-->
    <select id="findByComPanyCode" parameterType="String" resultType="member">
            select * from COMPANYCODE where COMCODE=#{comCode}
    </select>

    <!-- 최초가입 여부 (마스터 코드 등록여부)-->
    <select id="findByBusNumber" parameterType="String" resultType="member">
        select * from COMPANYCODE where BUSNUMBER=#{busNumber}
    </select>


    <!--진행중인 업체코드 COMCODE 등록 여부 -->
    <!--관리상태 USERSTATUS (0:대기, 1:검토중, 2:승인, 3:반려)-->
    <select id="findByUserInfoCompany" parameterType="String" resultType="member">
        select * from USERINFOCOMPANY where COMCODE=#{comCode}
    </select>

    <!--사용자 ID 중복 체크 -->
    <select id="findByMemberId" parameterType="String" resultType="member">
        select * from USERINFO where USERID=#{loginId}
    </select>


   <!--사업자 번호 등록여부 검색-->
    <select id="findByBusnumber" parameterType="String" resultType="member">
        select * from COMPANYCODE where BUSNUMBER=#{loginEmail}
    </select>

    <select id="login" parameterType="member" resultType="member">
        select * from USER_INFO where USER_ID=#{USER_ID} and PASSWORD=#{PASSWORD}
    </select>
    <select id="findAll" resultType="member">
        select USER_EMAIL, PASSWORD, USER_NAME, USER_Mobile from USER_INFO
    </select>

    <delete id="delete" parameterType="int">
        delete from USER_INFO where USER_IDX=#{id}
    </delete>

    <select id="findByMemberEmail" parameterType="String" resultType="member">
        select * from USER_INFO where USER_EMAIL=#{loginEmail}
    </select>

    <update id="update" parameterType="member">
        update USER_INFO set USER_Mobile=#{USER_Mobile}
        where USER_IDX=#{USER_idx}
    </update>
</mapper>