<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IsoAuthItem">
    <insert id="insertItem" parameterType="isoAuthItem">
        INSERT INTO SC_ISO_AUTH_COMPANY_ITEM(COM_CODE, AUTH_TYPE, AUTH_CODE, AUTH_DATE, EXP_DATE, REG_INPUT_DATE, REG_DW_USER_IDX, UP_DW_USER_IDX, REG_DATE, UP_DATE, ITEM_STATE, STATE_DATE, FILE_NAME, FILE_PATH)
        VALUES (#{COM_CODE}, #{AUTH_TYPE}, #{AUTH_CODE}, #{AUTH_DATE}, #{EXP_DATE}, #{REG_INPUT_DATE}, #{REG_DW_USER_IDX}, #{UP_DW_USER_IDX}, sysdate, sysdate, #{ITEM_STATE}, sysdate, #{FILE_NAME}, #{FILE_PATH})
    </insert>

    <update id="updateItem" parameterType="isoAuthItem">
        UPDATE SC_ISO_AUTH_COMPANY_ITEM
        SET ITEM_STATE=#{ITEM_STATE},
            AUTH_DATE=#{AUTH_DATE}, EXP_DATE=#{EXP_DATE}, REG_INPUT_DATE=#{REG_INPUT_DATE},
            FILE_NAME=#{FILE_NAME}, FILE_PATH=#{FILE_PATH},
            UP_DW_USER_IDX = #{UP_DW_USER_IDX}, UP_DATE = sysdate, STATE_DATE = sysdate
        WHERE COM_CODE=#{COM_CODE} AND AUTH_CODE=#{AUTH_CODE}
    </update>

    <select id="selectAuthState" parameterType="isoAuthItem" resultType="String">
        SELECT CASE
            WHEN COUNT(CASE WHEN ITEM_STATE = 'APPROVED' THEN 1 END) = COUNT(*) THEN 'APPROVED'
            WHEN COUNT(CASE WHEN ITEM_STATE = 'REJECT' THEN 1 END) > 0 THEN 'REJECT'
            WHEN COUNT(CASE WHEN ITEM_STATE = 'SEND' THEN 1 END) > 0 THEN 'SEND'
            WHEN COUNT(CASE WHEN ITEM_STATE = 'SAVE' THEN 1 END) > 0 THEN 'SAVE'
            ELSE ''
            END AS ITEM_STATE
        from SC_ISO_AUTH_COMPANY_ITEM where AUTH_CODE=#{AUTH_CODE} and COM_CODE=#{COM_CODE}
    </select>


    <select id="findByIsoAuthItem" parameterType="map" resultType="isoAuthItem">
        select * from SC_ISO_AUTH_COMPANY_ITEM where AUTH_CODE=#{AUTH_CODE} and COM_CODE=#{COM_CODE}
    </select>

    <select id="getIsoAuthItems" parameterType="map" resultType="isoAuthItem">
        select * from SC_ISO_AUTH_COMPANY_ITEM where COM_CODE=#{COM_CODE}
    </select>

    <select id="getCompanyAuth" parameterType="map" resultType="authMgmt">
        SELECT ACI.COM_CODE, CC.COM_NAME, AUTH_TYPE, APPROVE_STATE, APPROVE_DATE, SEND_DATE, POINT
        FROM SC_AUTH_COMPANY_INFO ACI
        INNER JOIN SC_COMPANY_CODE CC
        ON CC.COM_CODE = ACI.COM_CODE
        WHERE AUTH_TYPE=#{AUTH_TYPE} and ACI.COM_CODE=#{COM_CODE}
    </select>

    <select id="searchCompanies" parameterType="map" resultType="authMgmt">
        SELECT
            ACI.COM_CODE, CC.COM_NAME, AUTH_TYPE, APPROVE_STATE,
            TO_CHAR(APPROVE_DATE, 'YYYY-MM-DD') AS APPROVE_DATE,
            TO_CHAR(SEND_DATE, 'YYYY-MM-DD') AS SEND_DATE, POINT
        FROM SC_AUTH_COMPANY_INFO ACI
        INNER JOIN SC_COMPANY_CODE CC
        ON CC.COM_CODE = ACI.COM_CODE
        WHERE 1 =1
        <if test="COM_CODE != null and COM_CODE != ''">
            AND (ACI.COM_CODE LIKE CONCAT(CONCAT('%',  #{COM_CODE}), '%'))
        </if>
        <if test="COM_NAME != null and COM_NAME != ''">
            AND (CC.COM_NAME LIKE CONCAT(CONCAT('%',  #{COM_NAME}), '%'))
        </if>
        <if test="COM_STATUS != null and COM_STATUS != ''">
            AND (ACI.APPROVE_STATE LIKE CONCAT(CONCAT('%',  #{COM_STATUS}), '%'))
        </if>
        <if test="AUTH_TYPE != null and AUTH_TYPE != ''">
            AND (ACI.AUTH_TYPE LIKE CONCAT(CONCAT('%',  #{AUTH_TYPE}), '%'))
        </if>
    </select>


    <select id="countByKeyword" parameterType="map" resultType="int">
        select count(*) CNT
        from SC_AUTH_COMPANY_INFO ACI
        INNER JOIN SC_COMPANY_CODE CC
        ON CC.COM_CODE = ACI.COM_CODE
        WHERE 1 =1
        <if test="COM_CODE != null and COM_CODE != ''">
            AND (ACI.COM_CODE LIKE CONCAT(CONCAT('%',  #{COM_CODE}), '%'))
        </if>
        <if test="COM_NAME != null and COM_NAME != ''">
            AND (CC.COM_NAME LIKE CONCAT(CONCAT('%',  #{COM_NAME}), '%'))
        </if>
        <if test="COM_STATUS != null and COM_STATUS != ''">
            AND (ACI.APPROVE_STATE LIKE CONCAT(CONCAT('%',  #{COM_STATUS}), '%'))
        </if>
        <if test="AUTH_TYPE != null and AUTH_TYPE != ''">
            AND (ACI.AUTH_TYPE LIKE CONCAT(CONCAT('%',  #{AUTH_TYPE}), '%'))
        </if>
    </select>

    <select id="getList" parameterType="String" resultType="isoAuthItem">
        SELECT
            COM_CODE,
            AUTH_TYPE,
            AUTH_CODE,
            TO_CHAR(AUTH_DATE, 'YYYY-MM-DD') AS AUTH_DATE,
            TO_CHAR(EXP_DATE, 'YYYY-MM-DD') AS EXP_DATE,
            TO_CHAR(REG_INPUT_DATE, 'YYYY-MM-DD') AS REG_INPUT_DATE,
            TO_CHAR(UP_DATE, 'YYYY-MM-DD') AS UP_DATE,
            ITEM_STATE,
            TO_CHAR(STATE_DATE, 'YYYY-MM-DD') AS STATE_DATE,
            FILE_NAME,
            FILE_PATH,
            REASON
        FROM (
            SELECT
                COALESCE(IACI.COM_CODE, #{COM_CODE}) AS COM_CODE,
                BC.BASE_VALUE AS AUTH_TYPE,
                BC.BASE_NAME AS AUTH_CODE,
                IACI.AUTH_DATE,
                IACI.EXP_DATE,
                IACI.REG_INPUT_DATE,
                IACI.UP_DATE,
                IACI.ITEM_STATE,
                IACI.STATE_DATE,
                IACI.FILE_NAME,
                IACI.FILE_PATH,
                IACI.REASON,
                BC.BASE_SORT
            FROM SC_base_code BC
            LEFT JOIN SC_ISO_AUTH_COMPANY_ITEM IACI
                ON BC.BASE_NAME = IACI.AUTH_CODE
                AND IACI.COM_CODE = #{COM_CODE}
            WHERE
                BC.GROUP_CODE != BC.BASE_CODE
                AND BC.BASE_STATUS = 'Y'
                AND BC.GROUP_CODE = 'IsoAuthCode'
            UNION ALL
            SELECT
                COALESCE(IACI.COM_CODE, #{COM_CODE}) AS COM_CODE,
                IACI.AUTH_TYPE,
                IACI.AUTH_CODE,
                IACI.AUTH_DATE,
                IACI.EXP_DATE,
                IACI.REG_INPUT_DATE,
                IACI.UP_DATE,
                IACI.ITEM_STATE,
                IACI.STATE_DATE,
                IACI.FILE_NAME,
                IACI.FILE_PATH,
                IACI.REASON,
                999 AS BASE_SORT
            FROM SC_ISO_AUTH_COMPANY_ITEM IACI
            WHERE IACI.COM_CODE = #{COM_CODE}
                AND NOT EXISTS (
                    SELECT 1
                    FROM SC_base_code BC
                    WHERE BC.BASE_NAME = IACI.AUTH_CODE
                    AND BC.GROUP_CODE != BC.BASE_CODE
                    AND BC.BASE_STATUS = 'Y'
                    AND BC.GROUP_CODE = 'IsoAuthCode'
                )
            ) AA
        ORDER BY AA.BASE_SORT ASC
    </select>



    <select id="getTotal" resultType="int">
        select count(*) CNT
        from SC_ISO_AUTH_COMPANY_ITEM
    </select>

    <select id="getExpDateList" parameterType="hashMap" resultType="java.util.HashMap">
        SELECT /*+ INDEX_DESC(SC_ISO_AUTH_COMPANY_ITEM PK_ISO_AUTH_COMPANY_ITEM) */
            ACI.COM_CODE, CC.COM_NAME, AUTH_TYPE, AUTH_CODE, TO_CHAR(AUTH_DATE, 'YYYY-MM-DD') AS AUTH_DATE,
            TO_CHAR(EXP_DATE, 'YYYY-MM-DD') AS EXP_DATE, TO_CHAR(ACI.REG_INPUT_DATE, 'YYYY-MM-DD') AS REG_INPUT_DATE, TO_CHAR(ACI.UP_DATE, 'YYYY-MM-DD') AS UP_DATE,
            ITEM_STATE, FILE_NAME, FILE_PATH
        FROM SC_ISO_AUTH_COMPANY_ITEM ACI
        INNER JOIN SC_COMPANY_CODE CC
        ON CC.COM_CODE = ACI.COM_CODE
        WHERE 1 =1
        <if test="COM_CODE != null and COM_CODE != ''">
            AND (ACI.COM_CODE LIKE CONCAT(CONCAT('%',  #{COM_CODE}), '%'))
        </if>
        <if test="COM_NAME != null and COM_NAME != ''">
            AND (CC.COM_NAME LIKE CONCAT(CONCAT('%',  #{COM_NAME}), '%'))
        </if>
        <if test="EXP_DATE != null and EXP_DATE != ''">
            AND TO_CHAR(ACI.EXP_DATE, 'YYYY.MM') = TO_CHAR(TO_DATE(#{EXP_DATE}), 'YYYY.MM')
        </if>
    </select>

    <update id="updateStatus" parameterType="isoAuthItem">
        UPDATE SC_ISO_AUTH_COMPANY_ITEM
        SET ITEM_STATE=#{ITEM_STATE}, REASON=#{REASON}, POINT=#{POINT}, UP_DW_USER_IDX = #{UP_DW_USER_IDX}, UP_DATE = sysdate, STATE_DATE = sysdate
        WHERE COM_CODE=#{COM_CODE} AND AUTH_CODE=#{AUTH_CODE}
    </update>

    <update id="saveAuthResult" parameterType="authMgmt">
        UPDATE SC_AUTH_COMPANY_INFO
        SET APPROVE_STATE = #{APPROVE_STATE}, APPROVE_DATE= sysdate, POINT = #{POINT}
        WHERE COM_CODE = #{COM_CODE}
        AND AUTH_TYPE = #{AUTH_TYPE}
    </update>
</mapper>