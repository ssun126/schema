<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="partManagement">
    <select id="getPlantList" resultType="HashMap">
        SELECT BASE_CODE,BASE_VALUE FROM SC_BASE_CODE
        WHERE GROUP_CODE ='PLANT' AND GROUP_CODE != BASE_CODE
        ORDER BY BASE_SORT asc
    </select>

    <select id="getApprovalStatus" resultType="HashMap">
        SELECT BASE_CODE,BASE_VALUE FROM SC_BASE_CODE
        WHERE GROUP_CODE ='APPVSTATUS' AND GROUP_CODE != BASE_CODE
        ORDER BY BASE_SORT asc
    </select>

    <select id="searchPartMgmt" parameterType="partManagement" resultType="partManagement">

        SELECT
        PM_IDX
        ,PM_PART_CODE
        ,pc.PART_NAME as PM_PART_NAME
        --,bc.base_value as PM_PLANT
        ,PM_PART_PLANT_CODE
        --,pc.PART_COUNTRY as PM_COUNTRY
        ,PM_PART_COUNTRY
        ,ui.USER_NAME as PM_REG_USER
        ,NVL(PM_ACTIVE_YN, ' ') as PM_ACTIVE_YN
        ,NVL(PM_APPROVAL_STATUS, ' ') as PM_APPROVAL_STATUS
        ,NVL(TO_CHAR(PM_APPROVAL_DATE, 'YYYY-MM-DD'),' ') as PM_APPROVAL_DATE
        FROM SC_PART_MANAGEMENT_DATA pmd
        LEFT OUTER JOIN  SC_PART_CODE pc ON pmd.PM_PART_CODE  = pc.PART_CODE
        --LEFT OUTER JOIN (SELECT Base_code, base_value FROM SC_BASE_CODE WHERE GROUP_CODE ='PLANT' AND GROUP_CODE != BASE_CODE ) bc ON pc.PLANT_CODE  = bc.base_code
        LEFT OUTER JOIN SC_USER_INFO ui  ON pmd.PM_REG_USER  = ui.USER_ID
        WHERE 1 =1
        <if test="PM_PART_CODE != null and PM_PART_CODE != ''">
            AND (PM_PART_CODE LIKE CONCAT(CONCAT('%',  #{PM_PART_CODE}), '%'))
        </if>
        <if test="PM_PART_NAME != null and PM_PART_NAME != ''">
            AND (PM_PART_NAME LIKE CONCAT(CONCAT('%',  #{PM_PART_NAME}), '%'))
        </if>
        <if test="PM_REG_USER != null and PM_REG_USER != ''">
            AND (PM_REG_USER LIKE CONCAT(CONCAT('%',  #{PM_REG_USER}), '%'))
        </if>
        <if test="PM_ACTIVE_YN != null and PM_ACTIVE_YN != ''">
            AND (PM_ACTIVE_YN = #{PM_ACTIVE_YN})
        </if>
        <if test="PM_PART_PLANT_CODE != null and PM_PART_PLANT_CODE != ''">
            AND (PM_PART_PLANT_CODE LIKE CONCAT(CONCAT('%',  #{PM_PLANT}), '%'))
        </if>
        <if test="PM_APPROVAL_STATUS != null and PM_APPROVAL_STATUS != ''">
            AND (PM_APPROVAL_STATUS LIKE CONCAT(CONCAT('%',  #{PM_APPROVAL_STATUS}), '%'))
        </if>
        <if test="PM_SDATE != null and PM_SDATE != ''">
            <![CDATA[ AND (PM_REG_DATE > #{PM_SDATE})]]>
        </if>
        <if test="PM_EDATE != null and PM_EDATE != ''">
            <![CDATA[ AND (PM_REG_DATE  <= #{PM_EDATE})]]>
        </if>

    </select>

    <select id="partCodeList" resultType="HashMap">
        SELECT PART_CODE,COM_NATION AS  PART_COUNTRY,PART_NAME,bc.BASE_VALUE
        FROM SC_PART_CODE pc
        LEFT OUTER JOIN  (SELECT Base_code, base_value FROM SC_BASE_CODE WHERE GROUP_CODE ='PLANT' AND GROUP_CODE != BASE_CODE ) bc ON pc.PLANT_CODE  = bc.base_code
        INNER JOIN SC_COMPANY_CODE scc ON pc.COM_CODE  = scc.COM_CODE

    </select>

    <insert id="save" parameterType="partManagement">
    <!-- INSERT INTO SC_PART_MANAGEMENT_DATA(PM_IDX,PM_PART_CODE,PM_QUALITY,PM_STATUS,PM_CHEMICAL_YN,PM_REG_DATE,PM_REG_USER)
     VALUES (SEQ_PM_IDX.NEXTVAL,#{PM_PART_CODE},#{PM_QUALITY},#{PM_STATUS},#{PM_CHEMICAL_YN},sysdate,'xp') -->
        INSERT INTO SC_PART_MANAGEMENT_DATA(PM_IDX,PM_PART_CODE,PM_PART_PLANT_CODE,PM_PART_COUNTRY,PM_QUALITY,PM_STATUS,PM_CHEMICAL_YN,PM_REG_DATE,PM_REG_USER)
        VALUES (SEQ_PM_IDX.NEXTVAL,#{PM_PART_CODE},#{PM_PART_PLANT_CODE},#{PM_PART_COUNTRY},#{PM_QUALITY},#{PM_STATUS},#{PM_CHEMICAL_YN},sysdate,'xp')
 </insert>

    <select id="getEtcFileData" parameterType="String" resultType="HashMap">
        select ETC_IFILE_NAME, ETC_IFILE_PATH
        from SC_PART_MGMT_DETAIL_ETC
        where ETC_IDX = #{idx}



    </select>

<!--   Detail    -->
    <update id="msdsUpdate" parameterType="partDetailMsds">
        UPDATE INTO SC_PART_MGMT_DETAIL_MSDS(MSDS_REG_DATE,MSDS_LANG,MSDS_APPROVAL_NUM ,MSDS_FILE_NAME ,MSDS_FILE_PATH)
        VALUES (#{MSDS_REG_DATE},#{MSDS_LANG},#{MSDS_APPROVAL_NUM} ,#{MSDS_FILE_NAME} ,#{MSDS_FILE_PATH})
        WHERE  MSDS_IDX = #{MSDS_IDX}

    </update>

    <update id="rohsUpdate" parameterType="partDetailRohs">
        UPDATE SC_PART_MGMT_DETAIL_ROHS
        set ROHS_CONFIRM_DATE= #{ROHS_CONFIRM_DATE},ROHS_CD=#{ROHS_CD},ROHS_HG = #{ROHS_HG},ROHS_PB = #{ROHS_PB}, ROHS_CR6= #{ROHS_CR6}
            ,ROHS_PBBS = #{ROHS_PBBS},ROHS_PBDES= #{ROHS_PBDES},ROHS_DEHP = #{ROHS_DEHP},ROHS_BBP = #{ROHS_BBP},ROHS_DBP = #{ROHS_DBP}
            ,ROHS_DIBP = #{ROHS_DIBP},ROHS_FILE_NAME= #{ROHS_FILE_NAME},ROHS_FILE_PATH = #{ROHS_FILE_PATH}
        WHERE ROHS_IDX = #{ROHS_IDX}
    </update>

    <update id="halgUpdate" parameterType="partDetailHalg">
        UPDATE SC_PART_MGMT_DETAIL_HALOGEN
        set HALOGEN_CONFIRM_DATE = #{HALOGEN_CONFIRM_DATE},HALOGEN_CL = #{HALOGEN_CL}, HALOGEN_BR = #{HALOGEN_BR},HALOGEN_CLBR = #{HALOGEN_CLBR}
        ,HALOGEN_F = #{HALOGEN_F}, HALOGEN_I= #{HALOGEN_I},HALOGEN_FILE_NAME = #{HALOGEN_FILE_NAME},HALOGEN_FILE_PATH = #{HALOGEN_FILE_PATH}
        WHERE HALOGEN_IDX =#{HALOGEN_IDX}
    </update>
    
    <update id="etcUpdate" parameterType="partDetailEtc">
        UPDATE SC_PART_MGMT_DETAIL_ETC
        VALUES ETC_CONFIRM_DATE = #{ETC_CONFIRM_DATE},ETC_ANALYSE_ENTRY = #{ETC_ANALYSE_ENTRY},ETC_ANALYSE_RESULT = #{ETC_ANALYSE_RESULT}
                ,ETC_FILE_NAME = #{ETC_FILE_NAME},ETC_FILE_PATH = #{ETC_FILE_PATH}
        WHERE ETC_IDX =#{ETC_IDX}
    </update>

    <insert id="msdsSave" parameterType="partDetailMsds">
        INSERT INTO SC_PART_MGMT_DETAIL_MSDS(MSDS_IDX,PM_IDX, MSDS_REG_DATE,MSDS_LANG,MSDS_APPROVAL_NUM ,MSDS_FILE_NAME ,MSDS_FILE_PATH)
        VALUES (SEQ_MSDS_IDX.NEXTVAL,#{PM_IDX},#{MSDS_REG_DATE},#{MSDS_LANG},#{MSDS_APPROVAL_NUM} ,#{MSDS_FILE_NAME} ,#{MSDS_FILE_PATH})
    </insert>

    <insert id="rohsSave" parameterType="partDetailRohs">
        INSERT INTO   SC_PART_MGMT_DETAIL_ROHS(ROHS_IDX,PM_IDX,ROHS_CONFIRM_DATE,ROHS_CD,ROHS_HG,ROHS_PB,ROHS_CR6,ROHS_PBBS,ROHS_PBDES,ROHS_DEHP,ROHS_BBP,ROHS_DBP,ROHS_DIBP,ROHS_FILE_NAME,ROHS_FILE_PATH)
        VALUES (SEQ_ROHS_IDX.NEXTVAL,#{PM_IDX},#{ROHS_CONFIRM_DATE},#{ROHS_CD},#{ROHS_HG},#{ROHS_PB},#{ROHS_CR6},#{ROHS_PBBS},#{ROHS_PBDES},#{ROHS_DEHP},#{ROHS_BBP},#{ROHS_DBP},#{ROHS_DIBP},#{ROHS_FILE_NAME},#{ROHS_FILE_PATH})
    </insert>

    <insert id="halgSave" parameterType="partDetailHalg">
        INSERT INTO  SC_PART_MGMT_DETAIL_HALOGEN(HALOGEN_IDX,PM_IDX,HALOGEN_CONFIRM_DATE,HALOGEN_CL,HALOGEN_BR,HALOGEN_CLBR,HALOGEN_F,HALOGEN_I,HALOGEN_FILE_NAME,HALOGEN_FILE_PATH)
        VALUES (SEQ_HALOGEN_IDX.NEXTVAL,#{PM_IDX},#{HALOGEN_CONFIRM_DATE},#{HALOGEN_CL},#{HALOGEN_BR},#{HALOGEN_CLBR},#{HALOGEN_F},#{HALOGEN_I},#{HALOGEN_FILE_NAME},#{HALOGEN_FILE_PATH})
    </insert>

    <insert id="etcSave" parameterType="partDetailEtc">
        INSERT INTO  SC_PART_MGMT_DETAIL_ETC(ETC_IDX,PM_IDX,ETC_CONFIRM_DATE,ETC_ANALYSE_ENTRY,ETC_ANALYSE_RESULT,ETC_FILE_NAME,ETC_FILE_PATH)
        VALUES (SEQ_ETC_IDX.NEXTVAL,#{PM_IDX},#{ETC_CONFIRM_DATE},#{ETC_ANALYSE_ENTRY},#{ETC_ANALYSE_RESULT},#{ETC_FILE_NAME},#{ETC_FILE_PATH})
    </insert>

    <select id="getSvhcList" resultType="svhcList">
        SELECT SVHC_NUM, SVHC_NAME,SVHC_CASNUM,SVHC_EUNUM
        FROM SC_SVHC_DATA
    </select>

    <select id="getDeclarList" resultType="Declaration">

        SELECT NVL(DECL_NUM,DECL_SUB_NUM) AS DECL_NUM ,DECL_NAME, DECL_CASNUM,DECL_WEIGHT,DECL_CLASS
        FROM SC_DECLARATION_DATA


    </select>



</mapper>